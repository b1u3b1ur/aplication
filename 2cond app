
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.textinput import TextInput
from kivy.animation import Animation
from kivy.uix.image import Image
from kivy.clock import Clock
from kivy.core.audio import SoundLoader


def play_music(music_file):
    """Loads and plays music from a file."""
    sound = SoundLoader.load(music_file)
    if sound:
        sound.play()
    else:
        print(f"Failed to load sound: {music_file}")

class OneScr(Screen):
    def __init__(self, name='one'):
        super().__init__(name=name)
        box = BoxLayout(orientation='vertical')

        btn = Button(text="inicio ", background_color=(0, 0, 1, 1))
        label1 = Label(text="""Esta app nos permite 
        realizar un diagnostico inicial de tu salud 
        usando un test de Ruffer
        """)
        input1 = TextInput(text="Ingresa nombre: ",background_color=(0.5, 0.7, 1, 1))
        input2 = TextInput(text="Ingresa edad: ",background_color=(0.5, 0.7, 1, 1))
        btn.on_press = self.next

        play_music("mii.mp3")

        box.add_widget(label1)
        box.add_widget(input1)
        box.add_widget(input2)
        box.add_widget(btn)
        self.add_widget(box)
    
    def next(self):
        self.manager.transition.direction = 'right'    
        self.manager.current = 'first'

class FirstScr(Screen):
    def __init__(self, name='first'):
        super().__init__(name=name) 
        box = BoxLayout(orientation='vertical')
        btn = Button(text="siguiente",background_color=(1, 0, 0, 1))
        input1 = TextInput(text="Ingresa el resultado: ", background_color=(0.5, 0.7, 1, 1))
        label1 = Label(text="""Mide tu pulso por 15 segundos
        escribe tus resultados correspondientes""",)

        play_music("mii.mp3")
        
        btn.on_press = self.next
        box.add_widget(label1)
        box.add_widget(input1)
        box.add_widget(btn) 
        self.add_widget(box)

    def next(self):
        self.manager.transition.direction = 'right' 
        self.manager.current = 'second'

class Chronometer:
    def __init__(self, duration=45):
        self.duration = duration
        self.elapsed_time = 0
        self.label = Label(text=f"Cronometro: {self.elapsed_time}/{self.duration}")
        self.event = None

    def start(self):
        self.event = Clock.schedule_interval(self.update, 1)

    def stop(self):
        if self.event:
            self.event.cancel()

    def update(self, dt):
        self.elapsed_time += 1
        self.label.text = f"Cronometro: {self.elapsed_time}/{self.duration}"

        if self.elapsed_time >= self.duration:
            self.stop()

class SecondScr(Screen):
    def __init__(self, name='second'):
        super().__init__(name=name)
        self.chronometer = Chronometer()
        box= BoxLayout(orientation='vertical')
        label= Label(text="Realiza 30 sentadillas en 45 segundos")
        btn = Button(text="siguiente", background_color=(0, 1, 0, 1))
        play_music("mii.mp3")
        btn.on_press = self.next
        box.add_widget(label)
        box.add_widget(self.chronometer.label)  
        box.add_widget(btn)
        self.add_widget(box)
        self.chronometer.start()


    def next(self):
        self.manager.transition.direction = 'right'
        self.manager.current = 'third'

class ThirdScr(Screen):
    def __init__(self, name='third'):
        super().__init__(name=name)
        box= BoxLayout(orientation='vertical')
        label= Label(text="holaaaa")
        btn = Button(text="tercera", background_color = (1, 0.5, 0.5, 1))
        input1= TextInput(text="Resultado: ", background_color=(0.5, 0.7, 1, 1))
        input2= TextInput(text="Resultado despues de descanso: ", background_color=(0.5, 0.7, 1, 1))
        play_music("mii.mp3")
        box.add_widget(label)
        box.add_widget(input1)
        box.add_widget(input2)
        box.add_widget(btn)
        self.add_widget(box)
        btn.on_press = self.next

    def next(self):
        self.manager.transition.direction = 'right'
        self.manager.current = 'fourth'

class FourthScr(Screen):
    def __init__(self, name='fourth'):
        super().__init__(name=name)
        box= BoxLayout(orientation='vertical')
        label= Label(text="Aqui deberia poner los resulatdos pero no se como xd")
        btn = Button(text="si no funciono el test o los resultados no se dan presione el boton")
        image = Image(source='hola.jpg')
        box.add_widget(label)
        box.add_widget(image)
        box.add_widget(btn)
        self.add_widget(box)
        btn.on_press = self.next
        play_music("mii.mp3")

        anim = Animation(opacity=1, duration=1) 
        anim.start(image) 

    def next(self):
        self.manager.transition.direction = 'up'
        self.manager.current = 'Extra'

class ExtraScr(Screen):
    def __init__(self, name='Extra'):
        super().__init__(name=name)
        box= BoxLayout(orientation='vertical')
        
        label= Label(text="""Encaso de que no se haya podido realizar el diagnostico correctamente,
        se le recomienda realizar nuevamente el test de Ruffer
        o en caso de haberse saltado un paso regrese a el paso saltado """)
        btne = Button(text="reiniciar")
        btn1 = Button(text="esta seria la primera ")
        btn2 = Button(text="esta seria la segunda ")
        btn3 = Button(text="esta seria la tercera ")
        btn4 = Button(text="esta seria la cuarta ")

        btn1.on_press = self.next1
        btn2.on_press = self.next2
        btn3.on_press = self.next3
        btn4.on_press = self.next4
        btne.on_press = self.nextE

        play_music("mii.mp3")

        box.add_widget(label)
        box.add_widget(btn1)
        box.add_widget(btn2)
        box.add_widget(btn3)
        box.add_widget(btn4)
        box.add_widget(btne)

        self.add_widget(box)

    def nextE(self):
        self.manager.transition.direction = 'down'    
        self.manager.current = 'one'
    def next1(self):
        self.manager.transition.direction = 'right'   
        self.manager.current = 'first'
    def next2(self):
        self.manager.transition.direction = 'left'    
        self.manager.current = 'second'
    def next3(self):
        self.manager.transition.direction = 'up'      
        self.manager.current = 'third'
    def next4(self):
        self.manager.transition.direction = 'down'    
        self.manager.current = 'fourth'


class MyApp(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(OneScr())
        sm.add_widget(FirstScr())
        sm.add_widget(SecondScr())
        sm.add_widget(ThirdScr())
        sm.add_widget(FourthScr())
        sm.add_widget(ExtraScr())

        return sm


app = MyApp()
app.run()
